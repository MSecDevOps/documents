{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the MSECURITY LMS","text":"<p>The MSECURITY LMS is an online learning platform built to empower both students and instructors in organizing, accessing, and managing a wide range of educational resources. This platform focuses on subjects like cybersecurity, programming, and other technical fields, creating a structured yet engaging environment for users to learn and grow.</p>"},{"location":"#what-makes-this-platform-stand-out","title":"What Makes This Platform Stand Out?","text":"<ul> <li>Easy User Registration and Profile Management:: From signing up to customizing their profiles, users can manage everything right from the platform itself.</li> <li>Seamless Course Enrollment: With just a few clicks, students can join courses and keep track of their learning journey on an intuitive dashboard.</li> <li>Comprehensive Learning Materials: Courses are designed with multiple video lessons and extra resources to help students dive deep into each topic.</li> <li>Engaging Quizzes and Assessments: Quizzes are strategically placed within each module, allowing users to test their understanding as they progress.</li> <li>Motivational Point System: Students can earn points by completing lessons, assignments, and quizzes, making the learning experience fun and rewarding.</li> <li>Secure Payment Options: Premium courses are just a click away, with secure payment options integrated directly into the platform.</li> </ul>"},{"location":"#behind-the-scenes-the-technology-stack","title":"Behind the Scenes \u2013 The Technology Stack","text":"<p>The MSECURITY LMS is designed with a robust and reliable technology stack to support a smooth learning experience:</p> <ul> <li>Backend: Powered by Django and Django Rest Framework for seamless server-side performance.</li> <li>Frontend: ReactJS (coming in future updates) to enhance user interaction and responsiveness.</li> <li>Database: PostgreSQL, ensuring data is secure and accessible.</li> <li>API Security: JWT-based authentication to keep user data protected.</li> <li>Payment Integration: Integrated with the Payme API, making transactions easy and safe.</li> </ul>"},{"location":"#core-applications-apps","title":"Core Applications (Apps)","text":"<p>To keep the project organized and functional, the MSECURITY LMS is divided into several key applications, or \u201capps\u201d:</p> <ol> <li>api: Manages all API endpoints for seamless data interaction between the frontend and backend.</li> <li>course: Handles course creation, module management, and all related educational resources.</li> <li>payment: Manages payments and enrollment processes, tracking user access to premium content.</li> <li>gamification: Tracks points earned by users and monitors activity, creating a motivational learning environment.</li> <li>userauths:  Manages user authentication, including registration, login, and secure access controls.</li> </ol>"},{"location":"#how-is-the-project-structured","title":"How Is the Project Structured?","text":"<p>To keep everything organized, the MSECURITY LMS is divided into several core applications (or \u201capps\u201d), each serving a unique purpose:</p> <ol> <li>User Authentication: Manages the user registration, login, and overall authentication processes.</li> <li>Course Management: Focused on creating courses, managing modules, and handling all educational materials.</li> <li>Gamification: Keeps track of points earned by students, enhancing their engagement and motivation.</li> <li>Payment Processing: Manages enrollment payments and tracks payment statuses to streamline access to premium courses.</li> </ol>"},{"location":"#why-use-the-msecurity-lms","title":"Why Use the MSECURITY LMS?","text":"<p>This platform is designed for both educators who want to deliver courses online and students looking to advance their knowledge. With a user-friendly design, it helps students stay organized and motivated, while offering educators a flexible tool to share knowledge effectively. MSECURITY LMS is a one-stop solution for a structured, interactive, and enjoyable learning journey.</p>"},{"location":"api_reference/","title":"API Reference for MSECURITY LMS","text":"<p>This document outlines all API endpoints for the MSECURITY LMS platform, detailing their purpose, HTTP methods, required payloads, and sample responses.</p>"},{"location":"api_reference/#1-authentication-endpoints","title":"1. Authentication Endpoints","text":""},{"location":"api_reference/#11-token-obtain","title":"1.1 Token Obtain","text":"<p>Endpoint: <code>/user/token/</code> Method: <code>POST</code> Description: Generate access and refresh tokens for a user. Request: <code>{   \"email\": \"user@example.com\",   \"password\": \"yourpassword\" }</code> Response: <code>{   \"access\": \"access_token\",   \"refresh\": \"refresh_token\" }</code></p>"},{"location":"api_reference/#12-token-refresh","title":"1.2 Token Refresh","text":"<p>Endpoint: <code>/user/token/refresh/</code> Method: <code>POST</code> Description: Refresh an access token using the refresh token. Request: <code>{   \"refresh\": \"refresh_token\" }</code> Response: <code>{   \"access\": \"new_access_token\" }</code></p>"},{"location":"api_reference/#13-register-user","title":"1.3 Register User","text":"<p>Endpoint: <code>/user/register/</code> Method: <code>POST</code> Description: Register a new user account. Request: <code>{   \"first_name\": \"John\",   \"last_name\": \"Doe\",   \"email\": \"user@example.com\",   \"phone_number\": \"1234567890\",   \"device_type\": \"mobile\",   \"device_identifier\": \"device_uuid\" }</code> Response: <code>{   \"message\": \"Registration successful. Check your email for login credentials.\" }</code></p>"},{"location":"api_reference/#14-login-user","title":"1.4 Login User","text":"<p>Endpoint: <code>/user/login/</code> Method: <code>POST</code> Description: Authenticate a user and retrieve tokens. Request: <code>{   \"email\": \"user@example.com\",   \"password\": \"yourpassword\",   \"device_identifier\": \"device_uuid\" }</code> Response: <code>{   \"message\": \"Login successful.\" }</code></p>"},{"location":"api_reference/#15-logout-user","title":"1.5 Logout User","text":"<p>Endpoint: <code>/user/logout/</code> Method: <code>POST</code> Description: Log out the user and invalidate their token. Request: <code>{   \"refresh_token\": \"refresh_token\" }</code> Response: <code>{   \"message\": \"Successfully logged out.\" }</code></p>"},{"location":"api_reference/#16-password-reset","title":"1.6 Password Reset","text":"<p>Endpoint: <code>/user/password-reset-email/</code>, Method: <code>POST</code> Description: Send a temporary password to the user's email. Request: <code>{   \"email\": \"user@example.com\" }</code> Response: <code>{   \"message\": \"Temporary password sent to your email.\" }</code></p>"},{"location":"api_reference/#2-profile-management","title":"2. Profile Management","text":""},{"location":"api_reference/#21-get-profile","title":"2.1 Get Profile","text":"<p>Endpoint: <code>/student/profile/&lt;int:user_id&gt;/</code> Method: <code>GET</code> Description: Retrieve the logged-in user's profile. Response: <code>{   \"email\": \"user@example.com\",   \"full_name\": \"John Doe\",   \"image\": \"profile_image_url\",   \"country\": \"USA\",   \"about\": \"Student at LMS\" }</code></p>"},{"location":"api_reference/#22-update-profile","title":"2.2 Update Profile","text":"<p>Endpoint: <code>/student/profile/&lt;int:user_id&gt;/</code> Method: <code>PUT</code> Description: Update profile information. Request: <code>{   \"full_name\": \"John Doe Updated\",   \"country\": \"Canada\" }</code> Response: <code>{   \"message\": \"Profile updated successfully.\" }</code></p>"},{"location":"api_reference/#3-course-management","title":"3. Course Management","text":""},{"location":"api_reference/#31-list-all-courses","title":"3.1 List All Courses","text":"<p>Endpoint: <code>/course/course-list/</code> Method: <code>GET</code> Description: Retrieve all published courses. Response:</p> <p><code>[   {     \"id\": 1,     \"title\": \"Cybersecurity Basics\",     \"description\": \"Learn the basics of cybersecurity.\",     \"price\": 100.0,     \"image\": \"course_image_url\"   } ]</code></p>"},{"location":"api_reference/#32-course-details","title":"3.2 Course Details","text":"<p>Endpoint: <code>/course/course-detail/&lt;slug:slug&gt;/</code> Method: <code>GET</code> Description: Retrieve detailed information about a specific course. Response:</p> <p><code>{   \"title\": \"Cybersecurity Basics\",   \"description\": \"Comprehensive course on cybersecurity.\",   \"price\": 100.0,   \"modules\": [     {       \"title\": \"Introduction\",       \"videos\": [         {           \"title\": \"What is Cybersecurity?\",           \"duration\": \"10:00\"         }       ]     }   ] }</code></p>"},{"location":"api_reference/#33-enroll-in-a-course","title":"3.3 Enroll in a Course","text":"<p>Endpoint: <code>/course/&lt;slug:slug&gt;/enroll/</code> Method: <code>POST</code> Description: Enroll the logged-in user in a course. Response:</p> <p><code>{   \"message\": \"Enrolled successfully.\",   \"course\": \"Cybersecurity Basics\" }</code></p>"},{"location":"api_reference/#4-payment-endpoints","title":"4. Payment Endpoints","text":""},{"location":"api_reference/#41-create-payment","title":"4.1 Create Payment","text":"<p>Endpoint: /payme/create-payment/ Method: POST Description: Initiate payment for a course. Request:</p> <p><code>{   \"order_oid\": \"order_uuid\" }</code> Response: <code>{   \"payment_id\": \"payment_uuid\",   \"payment_url\": \"http://payme.uz/payment_link\" }</code></p>"},{"location":"api_reference/#42-check-payment-status","title":"4.2 Check Payment Status","text":"<p>Endpoint: <code>/payme/check-payment/&lt;str:payment_id&gt;/</code> Method: <code>GET</code> Description: Retrieve the payment status. Response: <code>{   \"status\": \"completed\",   \"details\": \"Payment successful\" }</code></p>"},{"location":"api_reference/#5-gamification","title":"5. Gamification","text":""},{"location":"api_reference/#51-mark-video-as-completed","title":"5.1 Mark Video as Completed","text":"<p>Endpoint: /gamification/videos/complete/ Method: POST Description: Mark a video as completed and reward points. Request:</p> <p><code>{   \"user_id\": 1,   \"video_id\": 101 }</code> Response: <code>{   \"message\": \"Video marked as completed.\",   \"user\": {     \"id\": 1,     \"points\": 100   } }</code></p>"},{"location":"api_reference/#6-quiz-and-test","title":"6. Quiz and Test","text":""},{"location":"api_reference/#61-retrieve-test","title":"6.1 Retrieve Test","text":"<p>Endpoint: <code>/test/&lt;int:video_id&gt;</code>/ Method: <code>GET</code> Description: Retrieve test details for a specific video. Response: <code>{   \"id\": 1,   \"title\": \"Cybersecurity Quiz\",   \"questions\": [     {       \"id\": 11,       \"text\": \"What is a firewall?\",       \"answers\": [         {\"id\": 101, \"text\": \"Hardware\", \"is_correct\": true},         {\"id\": 102, \"text\": \"Virus\", \"is_correct\": false}       ]     }   ] }</code></p>"},{"location":"api_reference/#62-submit-test","title":"6.2 Submit Test","text":"<p>Endpoint: <code>/test/submit/</code> Method: <code>POST</code> Description: Submit a completed test. Request:</p> <p><code>{   \"test\": 1,   \"questions\": [     {\"question_id\": 11, \"selected_answer_id\": 101}   ] }</code> Response: <code>{   \"message\": \"Test successfully submitted\",   \"score\": 90 }</code></p>"},{"location":"installation/","title":"Installation Guide","text":"<p>This guide will take you through the setup process for the MSECURITY LMS project, from setting up the environment to running the project. Let\u2019s go step-by-step to ensure everything is correctly installed and configured.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before getting started, make sure you have the following installed:</p> <ol> <li>Python: (version 3.8 or higher)</li> <li>PostgreSQL: for database management</li> <li>Redis Server: for task queue management with Celery</li> <li>Git:  to clone the repository</li> <li>Virtualenv: for managing a clean Python environment</li> <li>MkDocs: if you plan to build the project documentation</li> </ol>"},{"location":"installation/#1clone-the-project","title":"1.Clone the Project","text":"<p>Start by cloning the project repository</p> <pre><code>git clone https://github.com/MSecDevOps/msecurity_lms.git\n</code></pre> <pre><code>cd msecurity_lms\n</code></pre>"},{"location":"installation/#2-set-up-the-virtual-environment","title":"2. Set Up the Virtual Environment","text":"<p>Setting up a virtual environment ensures the project\u2019s dependencies do not interfere with other projects on your system.</p> <pre><code>python -m venv venv\n</code></pre> <pre><code>source venv/bin/activate # On Windows, use venv\\Scripts\\activate\n</code></pre>"},{"location":"installation/#3-install-the-required-packages","title":"3. Install the Required Packages","text":"<p>Now, install all the project dependencies using the <code>requirements.txt</code> file:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>This will install Django, Django Rest Framework, Celery, Redis, Psycopg2 (for PostgreSQL), and any other required libraries.</p>"},{"location":"installation/#4-configure-postgresql-database","title":"4. Configure PostgreSQL Database","text":"<p>Make sure PostgreSQL is running on your system. Then, create a new database and user for the project:\\n 1. Open the PostgreSQL command line or use a GUI tool like pgAdmin. 2. Run the following SQL commands:</p> <pre><code>CREATE DATABASE lms_db;\nCREATE USER lms_user WITH PASSWORD 'your_password';\nALTER ROLE lms_user SET client_encoding TO 'utf8';\nALTER ROLE lms_user SET default_transaction_isolation TO 'read committed';\nALTER ROLE lms_user SET timezone TO 'UTC';\nGRANT ALL PRIVILEGES ON DATABASE lms_db TO lms_user;\n</code></pre>"},{"location":"installation/#5-set-up-redis-for-celery","title":"5. Set Up Redis for Celery","text":"<p>Redis will act as a message broker for Celery. Install Redis on your machine, or use a Redis cloud service.</p> <p>To install Redis on Ubuntu:</p> <pre><code>sudo apt update\nsudo apt install redis-server\n</code></pre> <p>After installation, start the Redis server: <pre><code>sudo service redis-server start\n</code></pre></p> <p>In your Django settings, configure Celery to use Redis as the broker:</p> settings.py<pre><code>CELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\n</code></pre>"},{"location":"installation/#6-run-initial-database-migrations","title":"6. Run Initial Database Migrations","text":"<p>To set up the initial database tables, run Django\u2019s migrations:</p> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"installation/#7-create-a-superuser","title":"7. Create a Superuser","text":"<p>Create a superuser account for accessing the Django admin interface:</p> <p><pre><code>python manage.py createsuperuser\n</code></pre> Follow the prompts to set up the admin credentials.</p>"},{"location":"installation/#8-start-the-celery-worker","title":"8. Start the Celery Worker","text":"<p>Celery is used to handle background tasks in the LMS, such as sending notifications. Start the Celery worker with the following command:</p> <pre><code>celery -A your_project_name worker -l info\n</code></pre> <p>Make sure to replace your_project_name with the name of your Django project directory.</p>"},{"location":"installation/#9-run-the-django-development-server","title":"9. Run the Django Development Server","text":"<p>Start the Django development server to see your project in action:</p> <pre><code>python manage.py runserver\n</code></pre> <p>Navigate to http://127.0.0.1:8000/ in your browser to access the LMS.</p>"},{"location":"installation/#10-set-up-documentation-with-mkdocs","title":"10. Set Up Documentation with MkDocs","text":"<p>If you\u2019re using MkDocs to build project documentation, ensure MkDocs is installed in your environment:</p> <pre><code>pip install mkdocs\n</code></pre> <p>To serve your documentation locally:</p> <pre><code>mkdocs serve\n</code></pre> <p>Your documentation will be available at http://127.0.0.1:8000/.</p>"},{"location":"installation/#summary","title":"Summary","text":"<ol> <li>Clone the repository and set up a virtual environment.</li> <li>Install dependencies from requirements.txt.</li> <li>Set up a PostgreSQL database and update your Django settings.</li> <li>Install Redis and configure it for Celery.</li> <li>Run initial migrations and create a superuser.</li> <li>Start the Celery worker and Django server to launch the LMS.</li> <li>Serve documentation locally with MkDocs.</li> <li>With everything set up, you should now have a fully operational LMS development environment!</li> </ol>"},{"location":"models/","title":"Models Documentation","text":"<p>This document provides an overview of the database models used in the LMS project. Each model is described in detail, including its purpose, fields, relationships, and important methods.</p>"},{"location":"models/#userauths-app","title":"Userauths App","text":""},{"location":"models/#user-model","title":"User Model","text":"<ul> <li>Represents a user in the system, supporting authentication and profile management.</li> <li>Fields:</li> <li><code>username</code>: A unique identifier for the user. </li> <li><code>email</code>: User's email address, used as the primary identifier.</li> <li><code>first_name</code> and last_name: Basic user information.</li> <li><code>phone_number</code>: User's contact number.</li> <li><code>bonus</code>: A field to store bonus points earned through referrals or activities.</li> <li><code>otp</code>: A one-time password for authentication-related actions.</li> <li><code>points</code>: Total points earned by the user for completing courses, modules, or assignments.</li> <li>Key Methods:</li> <li><code>update_last_activate()</code>: Updates the user's last activation timestamp.</li> </ul>"},{"location":"models/#profile-model","title":"Profile Model","text":"<ul> <li>Stores additional user information, such as profile image and social media links.</li> <li>Fields:</li> <li><code>image</code>: User's profile picture.</li> <li><code>full_name</code>: Full name of the user.</li> <li><code>country</code>: User's location.</li> <li><code>instagram</code>, <code>linkedin</code>, <code>github</code>: Links to the user's social media profiles.</li> <li>Key Methods:</li> <li><code>generate_referral_url()</code>: Generates a referral link for the user.</li> </ul>"},{"location":"models/#referral-model","title":"Referral Model","text":"<ul> <li>Manages referral data for users.</li> <li>Fields:</li> <li>referral_code: A unique code generated for each user.</li> <li>bonus: The bonus points associated with the referral.</li> <li>Key Methods: </li> <li><code>generate_referral_url()</code>: Creates a referral link.</li> </ul>"},{"location":"models/#useractivitylog-model","title":"UserActivityLog Model","text":"<ul> <li>Tracks user activities, such as login, profile updates, and course enrollment.</li> <li>Fields:</li> <li><code>action</code>: The type of action performed by the user (e.g., \"LOGIN\").</li> <li><code>timestamp</code>: The date and time of the activity.</li> <li><code>details</code>: Additional information about the activity. </li> </ul>"},{"location":"models/#payment-app","title":"Payment App","text":""},{"location":"models/#cart-model","title":"Cart Model","text":"<ul> <li>Represents a user's shopping cart.</li> <li>Fields:</li> <li><code>course</code>: The course added to the cart.</li> <li><code>price</code> and total: Monetary values related to the cart.</li> <li><code>cart_id</code>: A unique identifier for the cart.</li> <li>Relationships:</li> <li>Related to the Course and User models.</li> </ul>"},{"location":"models/#cartorder-model","title":"CartOrder Model","text":"<ul> <li>Represents an order created from a cart.</li> <li>Fields:</li> <li><code>sub_total</code>, total_fee, total: Financial details of the order.</li> <li><code>payment_status</code>: Indicates whether the payment is \"Paid\", \"Processing\", or \"Failed\".</li> <li><code>coupons</code>: Coupons applied to the order.</li> </ul>"},{"location":"models/#coupon-model","title":"Coupon Model","text":"<ul> <li>Represents discount coupons applicable to courses.</li> <li>Fields:</li> <li><code>code</code>: A unique coupon code.</li> <li><code>discount</code>: The percentage discount offered.</li> <li><code>max_usage_count</code>: Maximum times the coupon can be used.</li> </ul>"},{"location":"models/#course-app","title":"Course App","text":""},{"location":"models/#course-model","title":"Course Model","text":"<ul> <li>Represents an individual course available for enrollment.</li> <li>Fields:</li> <li><code>title</code>: The course name.</li> <li><code>description</code>: Details about the course content.</li> <li><code>price</code>: The cost of enrolling in the course.</li> <li><code>slug</code>: A unique slug for the course.</li> <li>Relationships:</li> <li>Linked to <code>CourseCategory</code>, <code>Module</code>, and <code>User</code>.</li> </ul>"},{"location":"models/#module-model","title":"Module Model","text":"<ul> <li>Represents a collection of lessons or videos in a course.</li> <li>Fields:</li> <li><code>title</code>: The name of the module.</li> <li><code>variant_id</code>: A unique identifier for the module.</li> <li><code>assignments</code>: Related assignments for the module.</li> <li>Key Methods: </li> <li><code>mark_as_completed()</code>: Marks the module as completed if all tasks are done.</li> </ul>"},{"location":"models/#video-model","title":"Video Model","text":"<ul> <li>Represents a single video lesson within a module.</li> <li>Fields:</li> <li><code>title</code>: The name of the video.</li> <li><code>video_iframe</code>: The embed code for the video.</li> <li><code>duration</code>: The length of the video.</li> <li>Key Methods:</li> <li><code>mark_as_completed()</code>: Marks the video as completed by a user.</li> </ul>"},{"location":"models/#homeworkassignment-model","title":"HomeWorkAssignment Model","text":"<ul> <li>Represents assignments linked to a video.</li> <li>Fields:</li> <li><code>description</code>: Instructions for the assignment.</li> <li><code>due_date</code>: The deadline for submission.</li> <li>Key Methods:</li> <li><code>mark_as_completed(</code>): Awards points when the assignment is completed.</li> </ul>"},{"location":"models/#test-model","title":"Test Model","text":"<ul> <li>Represents a quiz linked to a video.</li> <li>Fields:</li> <li><code>title</code>: The name of the test.</li> <li><code>passing_score</code>: The minimum score required to pass.</li> <li><code>time_limit</code>: The maximum time allowed for the test.</li> <li>Key Methods:</li> <li><code>get_random_question()</code>: Fetches a random question from the test.</li> </ul>"},{"location":"models/#gamification-and-notifications","title":"Gamification and Notifications","text":""},{"location":"models/#bonushistory-model","title":"BonusHistory Model","text":"<ul> <li>Tracks the bonus points earned by users over time.</li> <li><code>Fields</code>:</li> <li><code>amount</code>: The number of points awarded.</li> <li><code>created_at</code>: The date and time of the bonus.</li> </ul>"},{"location":"models/#notificationforhomework-model","title":"NotificationForHomeWork Model","text":"<ul> <li>Stores notifications for users about their homework.</li> <li>Fields:</li> <li><code>message</code>: The notification message.</li> <li><code>is_read</code>: Indicates whether the notification has been read.</li> </ul>"},{"location":"usage/","title":"How to Use the MSECURITY LMS Platform","text":"<p>Welcome to the MSECURITY LMS, an online platform designed to help students and instructors connect through interactive courses, videos, and quizzes. This guide will take you through the steps to make the most out of your experience on the platform.</p>"},{"location":"usage/#getting-started","title":"Getting Started","text":""},{"location":"usage/#1-creating-an-account","title":"1. Creating an Account","text":"<ul> <li>Visit the Sign-Up Page.</li> <li>Enter your full name, email address, and a secure password.</li> <li>Check your email for a verification link and click it to activate your account.</li> <li>Once activated, log in with your credentials.</li> </ul>"},{"location":"usage/#2-setting-up-your-profile","title":"2. Setting Up Your Profile","text":"<ul> <li>After logging in, navigate to the Profile Settings section.</li> <li>Upload a profile picture, add your contact details, and complete your personal information.</li> <li>Save the changes to update your profile.</li> </ul>"},{"location":"usage/#exploring-the-core-features","title":"Exploring the Core Features","text":""},{"location":"usage/#enrolling-in-a-course","title":"Enrolling in a Course","text":"<ul> <li>Browse available courses from the Courses section.</li> <li>Click on any course to view details like topics, instructor name, and price.</li> <li>Hit the Enroll button to join the course. If it\u2019s a paid course, you will be redirected to the payment page.</li> </ul>"},{"location":"usage/#watching-video-lessons","title":"Watching Video Lessons","text":"<ul> <li>Go to the My Courses section and select a course you\u2019ve enrolled in.</li> <li>Choose a module to access the video lessons within it.</li> <li>Watch the video directly on the platform. Some videos may require completing the previous ones before they are unlocked.</li> </ul>"},{"location":"usage/#taking-quizzes","title":"Taking Quizzes","text":"<ul> <li>After watching a video lesson, click on the Take Quiz button.</li> <li>Answer the questions within the given time limit. Most quizzes allow a maximum of three attempts.</li> <li>Once completed, your score will be displayed, and you\u2019ll see which answers were correct.</li> </ul>"},{"location":"usage/#submitting-assignments","title":"Submitting Assignments","text":"<ul> <li>Open a module with an active assignment.</li> <li>Click on Submit Assignment and either upload your file or type your response in the provided text editor.</li> <li>Wait for the instructor\u2019s feedback and grade.</li> </ul>"},{"location":"usage/#advanced-features","title":"Advanced Features","text":""},{"location":"usage/#tracking-your-progress","title":"Tracking Your Progress","text":"<ul> <li>View your overall course completion percentage in the Dashboard section.</li> <li>Track individual module completion and scores for quizzes and assignments.</li> </ul>"},{"location":"usage/#gamification","title":"Gamification","text":"<ul> <li>Earn points for completing lessons, quizzes, and assignments:</li> <li> <ul> <li>100 points for completing a video.</li> </ul> </li> <li> <ul> <li>250 points for submitting an assignment.</li> </ul> </li> <li> <ul> <li>500 points for completing a module.</li> </ul> </li> <li>Points will be displayed on your profile and can be redeemed for rewards or badges.</li> </ul>"},{"location":"usage/#payment-and-enrollment","title":"Payment and Enrollment","text":"<ul> <li>Courses requiring payment will redirect you to a secure payment gateway.</li> <li>Use your saved payment methods or enter new details to complete the transaction.</li> </ul>"},{"location":"usage/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":""},{"location":"usage/#forgot-password","title":"Forgot Password?","text":"<ul> <li>Click Forgot Password? on the login page.</li> <li>Enter your registered email address to receive a password reset link.</li> <li>Follow the link to create a new password and regain access.</li> </ul>"},{"location":"usage/#payment-failed","title":"Payment Failed","text":"<ul> <li>Ensure your internet connection is stable and your payment method is active.</li> <li>Retry the payment process or contact customer support for further assistance.</li> <li>Locked Out of a Quiz or Assignment</li> <li>If you\u2019ve exceeded the maximum number of attempts for a quiz, wait 24 hours to retry.</li> <li>Ensure you\u2019ve completed all required lessons before attempting to access the next module.</li> </ul>"},{"location":"usage/#admin-features-for-instructors","title":"Admin Features (For Instructors)","text":"<p>If you\u2019re an instructor, the LMS provides tools to create and manage your courses:</p>"},{"location":"usage/#1-course-creation","title":"1. Course Creation:","text":"<ul> <li>Go to the Instructor Dashboard and click Create Course.</li> <li>Add a course title, description, and cover image. Assign modules and upload videos.</li> </ul>"},{"location":"usage/#2-managing-assignments","title":"2. Managing Assignments:","text":"<ul> <li>Attach assignments to specific videos or modules.</li> <li>Review student submissions and provide feedback and grades.</li> </ul>"},{"location":"usage/#developer-notes-optional","title":"Developer Notes (Optional)","text":""},{"location":"usage/#api-interaction","title":"API Interaction","text":"<p>Developers can use the platform\u2019s REST APIs for automation or integration purposes. Below is a sample endpoint: * Get Course Details: <code>GET /api/v1/course/&lt;course_id&gt;/</code> Ensure proper authentication using JWT tokens for secure API access.</p>"},{"location":"usage/#stay-updated","title":"Stay Updated","text":"<p>We\u2019re constantly improving the platform with new features and updates. For more information or assistance, visit the Help Center or contact support.</p>"}]}